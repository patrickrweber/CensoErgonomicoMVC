// <auto-generated />
using System;
using CensoErgonomico.Infra.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CensoErgonomico.Infra.Data.Migrations
{
    [DbContext(typeof(MySqlContext))]
    partial class MySqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CensoErgonomico.Domain.Models.Acoes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Medicamento")
                        .HasColumnType("int");

                    b.Property<bool>("MelhorFerias")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("MelhorFimSemana")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("MelhorNoite")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("MelhorRevezamento")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PiorAtivDomestica")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PiorFinalDia")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PiorHrExtra")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PiorJornadaNormal")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Acoes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d5ed9484-4ce9-4e7f-abae-cec0c218359d"),
                            Medicamento = 0,
                            MelhorFerias = false,
                            MelhorFimSemana = true,
                            MelhorNoite = false,
                            MelhorRevezamento = false,
                            PiorAtivDomestica = false,
                            PiorFinalDia = true,
                            PiorHrExtra = false,
                            PiorJornadaNormal = false
                        });
                });

            modelBuilder.Entity("CensoErgonomico.Domain.Models.CensoErgonomico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AcoesId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ColaboradorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ConsideracaoMotivoDor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Fumante")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("IMCId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("LocaisDoresId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("PraticaExercicio")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SenteDor")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("SintomasId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SugestaoMelhoria")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AcoesId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("IMCId");

                    b.HasIndex("LocaisDoresId");

                    b.HasIndex("SintomasId");

                    b.ToTable("CensoErgonomico");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5db9b8a5-2765-493b-b94b-ef90e9b283e5"),
                            AcoesId = new Guid("d5ed9484-4ce9-4e7f-abae-cec0c218359d"),
                            ColaboradorId = new Guid("db8dbd21-be0c-47ae-a98a-7b79101b8293"),
                            ConsideracaoMotivoDor = "MANUSEAR QUÍMICOS",
                            DataCadastro = new DateTime(2023, 4, 12, 20, 9, 51, 488, DateTimeKind.Local).AddTicks(5306),
                            Fumante = false,
                            IMCId = new Guid("211fc742-9b1b-4fdc-90d3-33355ff0ef55"),
                            LocaisDoresId = new Guid("a3d717bd-08f5-432f-a9d1-be3caf22d81c"),
                            PraticaExercicio = true,
                            SenteDor = true,
                            SintomasId = new Guid("75fba823-86df-41b7-87e0-4bdc449c2035"),
                            SugestaoMelhoria = "TROCAR DE BRAÇOS, ALIVIA A DOR DO COTOVELO"
                        });
                });

            modelBuilder.Entity("CensoErgonomico.Domain.Models.Colaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cadastro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("FuncaoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("InicioFuncao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SetorId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Turno")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncaoId");

                    b.HasIndex("PessoaId");

                    b.HasIndex("SetorId");

                    b.ToTable("Colaborador");

                    b.HasData(
                        new
                        {
                            Id = new Guid("db8dbd21-be0c-47ae-a98a-7b79101b8293"),
                            Cadastro = "24644",
                            FuncaoId = new Guid("b4ca99c4-61ac-4448-854a-5dd086300891"),
                            InicioFuncao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PessoaId = new Guid("6aa98b55-4643-4633-875a-61aad9537a9b"),
                            SetorId = new Guid("e8edcc59-2de1-40e7-a715-21f292af0bba"),
                            Turno = 2
                        });
                });

            modelBuilder.Entity("CensoErgonomico.Domain.Models.Funcao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("SetorId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("SetorId");

                    b.ToTable("Funcao");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b4ca99c4-61ac-4448-854a-5dd086300891"),
                            Nome = "BENEFICIAMENTO",
                            SetorId = new Guid("e8edcc59-2de1-40e7-a715-21f292af0bba")
                        });
                });

            modelBuilder.Entity("CensoErgonomico.Domain.Models.IMC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<double>("Altura")
                        .HasColumnType("double");

                    b.Property<double>("Peso")
                        .HasColumnType("double");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.ToTable("IMC");

                    b.HasData(
                        new
                        {
                            Id = new Guid("211fc742-9b1b-4fdc-90d3-33355ff0ef55"),
                            Altura = 1.78,
                            Peso = 84.0,
                            PessoaId = new Guid("6aa98b55-4643-4633-875a-61aad9537a9b")
                        });
                });

            modelBuilder.Entity("CensoErgonomico.Domain.Models.LocaisDores", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AntebracoD")
                        .HasColumnType("int");

                    b.Property<int>("AntebracoE")
                        .HasColumnType("int");

                    b.Property<int>("BraçoD")
                        .HasColumnType("int");

                    b.Property<int>("BraçoE")
                        .HasColumnType("int");

                    b.Property<int>("CostasInferiorD")
                        .HasColumnType("int");

                    b.Property<int>("CostasInferiorE")
                        .HasColumnType("int");

                    b.Property<int>("CostasSuperiorD")
                        .HasColumnType("int");

                    b.Property<int>("CostasSuperiorE")
                        .HasColumnType("int");

                    b.Property<int>("CotoveloD")
                        .HasColumnType("int");

                    b.Property<int>("CotoveloE")
                        .HasColumnType("int");

                    b.Property<int>("CoxaD")
                        .HasColumnType("int");

                    b.Property<int>("CoxaE")
                        .HasColumnType("int");

                    b.Property<int>("JoelhoD")
                        .HasColumnType("int");

                    b.Property<int>("JoelhoE")
                        .HasColumnType("int");

                    b.Property<int>("MaoD")
                        .HasColumnType("int");

                    b.Property<int>("MaoE")
                        .HasColumnType("int");

                    b.Property<int>("OmbroD")
                        .HasColumnType("int");

                    b.Property<int>("OmbroE")
                        .HasColumnType("int");

                    b.Property<int>("PeD")
                        .HasColumnType("int");

                    b.Property<int>("PeE")
                        .HasColumnType("int");

                    b.Property<int>("PernaD")
                        .HasColumnType("int");

                    b.Property<int>("PernaE")
                        .HasColumnType("int");

                    b.Property<int>("PescoçoD")
                        .HasColumnType("int");

                    b.Property<int>("PescoçoE")
                        .HasColumnType("int");

                    b.Property<int>("PunhoD")
                        .HasColumnType("int");

                    b.Property<int>("PunhoE")
                        .HasColumnType("int");

                    b.Property<int>("QuadrilD")
                        .HasColumnType("int");

                    b.Property<int>("QuadrilE")
                        .HasColumnType("int");

                    b.Property<int>("TornozeloD")
                        .HasColumnType("int");

                    b.Property<int>("TornozeloE")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LocaisDores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3d717bd-08f5-432f-a9d1-be3caf22d81c"),
                            AntebracoD = 0,
                            AntebracoE = 0,
                            BraçoD = 0,
                            BraçoE = 0,
                            CostasInferiorD = 2,
                            CostasInferiorE = 2,
                            CostasSuperiorD = 0,
                            CostasSuperiorE = 0,
                            CotoveloD = 0,
                            CotoveloE = 2,
                            CoxaD = 0,
                            CoxaE = 0,
                            JoelhoD = 0,
                            JoelhoE = 0,
                            MaoD = 0,
                            MaoE = 0,
                            OmbroD = 0,
                            OmbroE = 1,
                            PeD = 0,
                            PeE = 0,
                            PernaD = 0,
                            PernaE = 0,
                            PescoçoD = 1,
                            PescoçoE = 1,
                            PunhoD = 0,
                            PunhoE = 0,
                            QuadrilD = 0,
                            QuadrilE = 0,
                            TornozeloD = 0,
                            TornozeloE = 0
                        });
                });

            modelBuilder.Entity("CensoErgonomico.Domain.Models.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pessoa");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6aa98b55-4643-4633-875a-61aad9537a9b"),
                            CPF = "12345678902",
                            DataNascimento = new DateTime(2001, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "José da Cunha",
                            Sexo = 1
                        });
                });

            modelBuilder.Entity("CensoErgonomico.Domain.Models.Setor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Setor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8edcc59-2de1-40e7-a715-21f292af0bba"),
                            Nome = "BENEFICIAMENTO"
                        });
                });

            modelBuilder.Entity("CensoErgonomico.Domain.Models.Sintomas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Cansaco")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Choques")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Dolorimento")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Dor")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Estalos")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Formigamento")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LimitacaoMovimento")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ReducaoForca")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TempoQueixa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sintomas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("75fba823-86df-41b7-87e0-4bdc449c2035"),
                            Cansaco = true,
                            Choques = false,
                            Dolorimento = false,
                            Dor = true,
                            Estalos = false,
                            Formigamento = false,
                            LimitacaoMovimento = false,
                            ReducaoForca = false,
                            TempoQueixa = 4
                        });
                });

            modelBuilder.Entity("CensoErgonomico.Domain.Models.CensoErgonomico", b =>
                {
                    b.HasOne("CensoErgonomico.Domain.Models.Acoes", "Acoes")
                        .WithMany()
                        .HasForeignKey("AcoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CensoErgonomico.Domain.Models.Colaborador", "Colaborador")
                        .WithMany("CensoErgonomicos")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CensoErgonomico.Domain.Models.IMC", "IMC")
                        .WithMany()
                        .HasForeignKey("IMCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CensoErgonomico.Domain.Models.LocaisDores", "LocaisDores")
                        .WithMany()
                        .HasForeignKey("LocaisDoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CensoErgonomico.Domain.Models.Sintomas", "Sintomas")
                        .WithMany()
                        .HasForeignKey("SintomasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acoes");

                    b.Navigation("Colaborador");

                    b.Navigation("IMC");

                    b.Navigation("LocaisDores");

                    b.Navigation("Sintomas");
                });

            modelBuilder.Entity("CensoErgonomico.Domain.Models.Colaborador", b =>
                {
                    b.HasOne("CensoErgonomico.Domain.Models.Funcao", "Funcao")
                        .WithMany("Colaboradores")
                        .HasForeignKey("FuncaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CensoErgonomico.Domain.Models.Pessoa", "Pessoa")
                        .WithMany("Colaboradores")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CensoErgonomico.Domain.Models.Setor", "Setor")
                        .WithMany("Colaboradores")
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcao");

                    b.Navigation("Pessoa");

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("CensoErgonomico.Domain.Models.Funcao", b =>
                {
                    b.HasOne("CensoErgonomico.Domain.Models.Setor", "Setor")
                        .WithMany("Funcoes")
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("CensoErgonomico.Domain.Models.IMC", b =>
                {
                    b.HasOne("CensoErgonomico.Domain.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("CensoErgonomico.Domain.Models.Colaborador", b =>
                {
                    b.Navigation("CensoErgonomicos");
                });

            modelBuilder.Entity("CensoErgonomico.Domain.Models.Funcao", b =>
                {
                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("CensoErgonomico.Domain.Models.Pessoa", b =>
                {
                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("CensoErgonomico.Domain.Models.Setor", b =>
                {
                    b.Navigation("Colaboradores");

                    b.Navigation("Funcoes");
                });
#pragma warning restore 612, 618
        }
    }
}
